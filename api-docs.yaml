openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /auth/registration:
    post:
      tags:
        - auth-controller
      summary: 'Регистрация нового пользователя'
      operationId: registration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: object
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/refresh:
    post:
      tags:
        - auth-controller
      summary: "Получение нового 'refresh' токена"
      operationId: getNewRefreshToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/login:
    post:
      tags:
        - auth-controller
      summary: 'Логин пользователя и получение токенов'
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /auth/access:
    post:
      tags:
        - auth-controller
      summary: "Получение нового 'access' токена"
      operationId: getNewAccessToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefreshTokenRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TokenResponse'
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /resources/user:
    get:
      tags:
        - resource-controller
      summary: "Доступ для пользователей с ролью 'USER' или 'ADMIN'"
      operationId: getUserResource
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /resources/admin:
    get:
      tags:
        - resource-controller
      summary: "Доступ для пользователей с ролью 'ADMIN'"
      operationId: getAdminResource
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
        '401':
          description: Unauthorized
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '409':
          description: Conflict
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    ErrorResponse:
      type: object
      properties:
        statusCode:
          type: integer
          format: int32
        message:
          type: string
    Register:
      type: object
      properties:
        username:
          maxLength: 32
          minLength: 2
          type: string
        email:
          maxLength: 32
          minLength: 4
          type: string
        password:
          maxLength: 16
          minLength: 8
          type: string
        role:
          maxLength: 16
          minLength: 4
          type: string
          enum:
            - ADMIN
            - USER
    RefreshTokenRequest:
      type: object
      properties:
        refreshToken:
          type: string
    TokenResponse:
      type: object
      properties:
        accessToken:
          type: string
        refreshToken:
          type: string
        tokenType:
          type: string
    TokenRequest:
      type: object
      properties:
        email:
          maxLength: 32
          minLength: 4
          type: string
        password:
          maxLength: 16
          minLength: 8
          type: string
